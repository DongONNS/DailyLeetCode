给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:

输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
说明:

必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。

//这道题的思路是 每一个非0数字需要向前移动的距离是这个数前面的0 的个数
如我们的示例中
0 1 0 3 12

1前面有一个0，所以需要移动一个位置，3需要移动2个位置，12需要移动2个位置，然后将后面的空位置用0补齐即可；

class Solution {
    public void moveZeroes(int[] nums) {
        int count = 0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){
                count++;
            }
            else{
                nums[i-count] = nums[i];
            }
        }
        for(int i=nums.length-count;i<nums.length;i++){
            nums[i]=0;
        }
    }
}
