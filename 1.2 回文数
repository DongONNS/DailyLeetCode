class Solution {
    public boolean isPalindrome(int x) {
        if(x<0) return false;
        String str = x+"";
        int length = str.length();
        int[] arr = new int[length];
        
//      此处是实现将一个数字按数位放入数组中； 
        for(int i=0;i<length;i++){
            arr[i]=x%10;
            x/=10;
        }
//      比较数组中首位对应位置的数字是否相等；
        for(int j=0;j<=length/2;j++){
            if(arr[j]!=arr[length-j-1]){
                return false;
            }
        }
        return true;   
    }
}



//     方法二：
class Solution {
    public boolean isPalindrome(int x) {
        //思考：这里大家可以思考一下，为什么末尾为 0 就可以直接返回 false
        if (x < 0 || (x % 10 == 0 && x != 0)) return false;
        int revertedNumber = 0;
        while (x > revertedNumber) {
            revertedNumber = revertedNumber * 10 + x % 10;
            x /= 10;
        }
        return x == revertedNumber || x == revertedNumber / 10;
    }
}


//      方法三：
///简单粗暴，看看就行
class Solution {
    public boolean isPalindrome(int x) {
        String reversedStr = (new StringBuilder(x + "")).reverse().toString();
        return (x + "").equals(reversedStr);
    }
}
